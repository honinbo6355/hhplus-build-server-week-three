
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
//	id 'jacoco'
//	id("org.sonarqube") version "5.0.0.4638"
}

//sonar {
//	properties {
//		property "sonar.host.url", "http://localhost:9000"
//		property "sonar.login", "squ_a3a0125e5d6b7f2239950881f59b0419df70d302"
//		property "sonar.projectKey", "sonar-concert-project-key"
//		property "sonar.projectName" , "sonar-concert-project-name"
//		property "sonar.sources", "src"
//		property "sonar.language", "java"
//		property "sonar.sourceEncoding", "UTF-8"
//		property "sonar.profile", "Sonar way"
//		property "sonar.java.binaries", "${buildDir}/classes"
//		property "sonar.test.inclusions", "**/*Test.java"
//		property "sonar.exclusions", "**/resources/static/**, **/Q*.class, **/test/**"
//		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
//	}
//}

//jacoco {
//	// JaCoCo 버전
//	toolVersion = '0.8.11'
//
////  테스트결과 리포트를 저장할 경로 변경
////  default는 "$/jacoco"
////  reportsDir = file("$buildDir/customJacocoReportDir")
//}

group = 'com.example.hhplus'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '19'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.redisson:redisson-spring-boot-starter:3.23.3'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.kafka:spring-kafka'
}

tasks.named('test') {
	useJUnitPlatform()
//	finalizedBy 'jacocoTestReport'
}

//jacocoTestReport {
//	reports {
//		// 원하는 리포트를 켜고 끌 수 있습니다.
//		html {
//			enabled true
//		}
//		xml {
//			enabled true
//		}
//		csv {
//			enabled false
//		}
////  각 리포트 타입 마다 리포트 저장 경로를 설정할 수 있습니다.
////  html.destination file("$buildDir/jacocoHtml")
////  xml.destination file("$buildDir/jacoco.xml")
//	}
//	finalizedBy 'jacocoTestCoverageVerification'
//}

//jacocoTestCoverageVerification {
//	violationRules {
//		rule {
//			element = 'CLASS'
//
//			limit {
//				counter = 'BRANCH'
//				value = 'COVEREDRATIO'
////				minimum = 0.90
//				minimum = 0.50
//			}
//		}
//	}
//}

wrapper {
	gradleVersion = '7.6'
}
